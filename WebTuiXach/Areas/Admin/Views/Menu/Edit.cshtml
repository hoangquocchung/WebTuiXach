@model Data.FE.MenuUser

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    var sub = (Data.FE.MenuUser)ViewBag.submenu;
    var listsub = (List<Data.FE.MenuUser>)ViewBag.listsub;
}

<h2>Edit</h2>

@using (Html.BeginForm("Edit", "Menu", FormMethod.Post))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <div class="form-group">
        <div class="col-md-offset-2 btn">
            <input type="submit" value="Save" class="btn btn-danger wrn-btn" />
        </div>
    </div>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2", @style = "width: 100%;" })
        <div class="col-md-6">
            @Html.TextBoxFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ParentID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-6">
            @Html.DropDownListFor(model => model.ParentID, ViewBag.ProductCategoryID as SelectList, "-- chọn danh mục sản phẩm -- ", new { htmlAttributes = new { @class = "form-control" }, @id = "ParentID", @style = "display:block" })
            @*<select name="ParentID" id = "ParentID" style="display:block">
                    <option value="">-- Select Sports --</option>
                    @foreach (var item in sub.Where(x => x.Satus == true && x.FrameViewID == 2))
                    {

                        <option value="@item.ID">@item.Name</option>
                    }
                </select>*@

            @Html.ValidationMessageFor(model => model.ParentID, "", new { @class = "text-danger" })
        </div>
        <div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Level, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-6">
            @Html.TextBoxFor(model => model.Level, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Level, "", new { @class = "text-danger" })
            <label>thứ tự: 1, 2, 3</label>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Target, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-6">
            @Html.TextBoxFor(model => model.Target, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Target, "", new { @class = "text-danger" })
            <label>( _self ) hoặc ( _blank )</label>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SeoTitle, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-6">
            @Html.TextBoxFor(model => model.SeoTitle, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SeoTitle, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Satus, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-6">
            <div class="checkbox">
                @Html.CheckBoxFor(model => model.Satus)
                @Html.ValidationMessageFor(model => model.Satus, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
